{
	"Boilerplate": {
		
		"prefix": "treeTraverse",
		"body": [
			"//Traverse-PreOrder",
			"void traversePreOrder(struct node* temp)",
			"{",
			"	if (temp != NULL)",
			"	{",
			"		cout << \" \" << temp->data;",
			"		traversePreOrder(temp->left);",
			"		traversePreOrder(temp->left);",
			"	}",
			"}",
			"",
			"//Traverse-InOrder",
			"void traverseInOrder(struct node* temp)",
			"{",
			"	if (temp != NULL)",
			"	{",
			"		traverseInOrder(temp->left);",
			"		cout << \" \" << temp->data;",
			"		traverseInOrder(temp->right);",
			"	}",
			"}",
			"",
			"//Traverse-PostOrder",
			"void traversePostOrder(struct node* temp)",
			"{",
			"	if (temp != NULL)",
			"	{",
			"		traversePostOrder(temp->left);",
			"		traversePostOrder(temp->right);",
			"		cout << \" \" << temp->data;",
			"	}",
			"}",
			"$0"
		],
		"description": "Tree Traversal all types!"
	}
}